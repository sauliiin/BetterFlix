<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="DSTVHome">
		<definition>
			<!-- DSTV: include, onloads and onunload. -->
			<include>ds_customsettings</include>
			<onload condition="!Skin.HasSetting(ds-1strun-done)">ReplaceWindow(1130)</onload>
			<onload condition="System.HasAddon(script.skinshortcuts)">RunScript(script.skinshortcuts,type=buildxml&mainmenuID=9000&options=noGroups)</onload>
			<onunload>ClearProperty(ds_prop_widgetpath, home)</onunload>
			<defaultcontrol>9000</defaultcontrol>
			<backgroundcolor>background</backgroundcolor>
			<!-- DSTV: controls -->
			<controls>
				<include>DefaultBackground</include>
				<control type="multiimage">
					<depth>DepthBackground</depth>
					<include>FullScreenDimensions</include>
					<aspectratio>scale</aspectratio>
					<fadetime>600</fadetime>
					<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
					<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
					<animation effect="fade" time="400">VisibleChange</animation>
					<imagepath background="true">$VAR[HomeFanartVar]</imagepath>
					<visible>!Player.HasMedia</visible>
				</control>
				<control type="group">
					<animation effect="fade" start="0" end="100" time="100">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="100">WindowClose</animation>
					<animation effect="fade" start="100" end="75" time="0" condition="true">Conditional</animation>
					<visible>!Player.HasMedia + Skin.HasSetting(no_fanart) + !Skin.HasSetting(netflix_bg)</visible>
					<include>ColoredBackgroundImages</include>
				</control>
				<control type="group">
					<include>HomeMenuRight</include>
					<include>HomeBgFades</include>
					<include>HomeMenuLeft</include>
					<include>HomeTopNBottomBars</include>
					<include>HomeMenuLogos</include>
				</control>
			</controls>
		</definition>
	</include>

	<include name="HomeMenuRight">
		<control type="group" id="2000">
			<width>100%</width>
			<include>OpenClose_Right</include>
			<include>InfoArea</include>
			<include>skinshortcuts-template-ss_widgets</include>
		</control>
	</include>

	<include name="InfoArea">
		<control type="group">
			<left>0</left>
			<top>0</top>
			<visible>Skin.HasSetting(netflix_bg) + !Player.HasMedia</visible>
			<!-- Background to fill in the empty netflix fanart slot -->
			<control type="image">
				<right>0</right>
				<top>0</top>
				<width>100%</width>
				<height>100%</height>
				<aspectratio aligny="top">stretch</aspectratio>
				<texture colordiffuse="primary_background">dstv/netflix_blank.png</texture>
				<fadetime>500</fadetime>
			</control>
			<!-- Large Fanart corner image -->
			<control type="image">
				<right>0</right>
				<top>0</top>
				<width>88%</width>
				<height>98%</height>
				<aspectratio aligny="top">stretch</aspectratio>
				<texture>$VAR[ds_infoFanart]</texture>
				<fadetime>500</fadetime>
				<visible>!Skin.HasSetting(netflix_small_diffuse)</visible>
			</control>
			<!-- Small Fanart corner image -->
			<control type="image">
				<right>0</right>
				<top>0</top>
				<width>55%</width>
				<height>50%</height>
				<aspectratio aligny="top">stretch</aspectratio>
				<texture>$VAR[ds_infoFanart]</texture>
				<fadetime>500</fadetime>
				<visible>Skin.HasSetting(netflix_small_diffuse)</visible>
			</control>
			<!-- Netflix corner display fade -->
			<control type="image">
				<left>0</left>
				<top>0</top>
				<width>100%</width>
				<height>100%</height>
				<texture colordiffuse="primary_background">$VAR[ds_netflixDiffuse]</texture>
			</control>
		</control>
		<control type="group">
			<left>10</left>
			<top>0</top>
			<!-- InfoArea background shadow image -->
			<control type="group">
				<visible>!Skin.HasSetting(netflix_bg) + [ListItem.Property(weather) | ![ListItem.IsCollection | String.IsEmpty(ListItem.Plot)]]</visible>
				<left>-100</left>
				<top>-25</top>
				<width>1250</width>
				<height>60%</height>
				<control type="image">
					<visible>Skin.HasSetting(dstv_debug)</visible>
					<texture colordiffuse="red">dstv/test.png</texture>
				</control>
				<control type="image">
					<aspectratio aligny="top">stretch</aspectratio>
					<texture colordiffuse="info_background">dstv/info_bg.png</texture>
					<fadetime>500</fadetime>
				</control>
			</control>
			<!-- Title Text -->
			<control type="group">
				<visible>!Skin.HasSetting(dstv_setting_use_clearlogo_titles) | String.IsEmpty(Window(home).Property(ds_info_clearlogo))</visible>
				<left>155</left>
				<top>95</top>
				<width>1000</width>
				<height>80</height>
				<control type="image">
					<visible>Skin.HasSetting(dstv_debug)</visible>
					<texture colordiffuse="red">dstv/test_small.png</texture>
				</control>
				<control type="label">
					<font>font_MainMenuT</font>
					<label>$VAR[ds_infoTitle]</label>
					<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
					<shadowoffsetx>3</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
					<shadowoffsety>3</shadowoffsety> <!-- deslocamento vertical da sombra -->
					<aligny>center</aligny>
					<scroll>true</scroll>
					<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
				</control>
			</control>
			<!-- Title ClearLogo -->
			<control type="group">
				<visible>Skin.HasSetting(dstv_setting_use_clearlogo_titles) + !String.IsEmpty(Window(home).Property(ds_info_clearlogo))</visible>
				<left>170</left>
				<top>44</top>
				<width>45%</width>
				<height>198</height>
				<control type="image">
					<visible>Skin.HasSetting(dstv_debug)</visible>
					<texture colordiffuse="red">dstv/test_small.png</texture>
				</control>
				<control type="image">
					<aligny>left</aligny>
					<texture>$INFO[Window(home).Property(ds_info_clearlogo)]</texture>
					<aspectratio align="left" aligny="center">keep</aspectratio>
				</control>
			</control>
			<!-- Info Row 2 -->
			<control type="group">
				<left>145</left>
				<top>283</top>
				<height>30</height>
				<!-- Date -->
				<control type="group">
					<left>0</left>
					<width>120</width>
					<control type="image">
						<visible>Skin.HasSetting(dstv_debug)</visible>
						<texture colordiffuse="button_focusclear">dstv/test_small.png</texture>
					</control>
					<control type="label">
						<align>left</align>
						<aligny>center</aligny>
						<font>netSs</font>
						<textcolor>button_focusclear</textcolor>
						<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
						<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
						<shadowoffsety>2</shadowoffsety>
						<label>$VAR[ds_infoDate]</label>
						<scroll>true</scroll>
						<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
					</control>
				</control>
				<!-- Duration -->
				<control type="group">
					<visible>!String.IsEmpty(ListItem.Duration(hh:mm:ss)) | !String.IsEmpty(Window(home).Property(ds_info_duration))</visible>
					<left>116</left>
					<width>115</width>
					<control type="image">
						<visible>Skin.HasSetting(dstv_debug)</visible>
						<texture colordiffuse="button_focusclear">dstv/test_small.png</texture>
					</control>
					<!-- Duration BOX image -->
					<control type="image">
						<top>-2</top>
						<height>34</height>
						<aspectratio aligny="top">stretch</aspectratio>
						<texture colordiffuse="button_focusclear">flags/flag.png</texture>
					</control>
					<!-- Duration Text -->
					<control type="label">
						<align>center</align>
						<aligny>center</aligny>
						<font>netSs</font>
						<textcolor>button_focusclear</textcolor>
						<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
						<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
						<shadowoffsety>2</shadowoffsety>
						<label>$VAR[ds_infoDuration]</label>
						<scroll>true</scroll>
						<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
					</control>
				</control>
				<!-- Rating -->
				<control type="group">
					<left>241</left>
					<width>400</width>
					<control type="image">
						<visible>Skin.HasSetting(dstv_debug)</visible>
						<texture colordiffuse="button_focusclear">dstv/test_small.png</texture>
					</control>
					<control type="label">
						<align>left</align>
						<aligny>center</aligny>
						<font>netSs</font>
						<textcolor>button_focusclear</textcolor>
						<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
						<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
						<shadowoffsety>2</shadowoffsety>
						<label>$VAR[ds_infoRatingv]</label>
						<scroll>true</scroll>
						<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
					</control>
				</control>
			</control>
			<!-- Info Row 1 -->
			<control type="group">
				<left>143</left>
				<top>249</top>
				<height>30</height>
				<!-- Genre -->
				<control type="group">
					<left>0</left>
					<width>360</width>
					<control type="image">
						<visible>Skin.HasSetting(dstv_debug)</visible>
						<texture colordiffuse="red">dstv/test_small.png</texture>
					</control>
					<control type="label">
						<aligny>center</aligny>
						<font>netSp</font>
						<textcolor>FFCCCCCC</textcolor>
						<label>$VAR[ds_infoGenre]</label>
						<scroll>true</scroll>
						<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
					</control>
				</control>
				<!-- Resume -->
				<control type="group">
					<left>315</left>
					<width>240</width>
					<control type="image">
						<visible>Skin.HasSetting(dstv_debug)</visible>
						<texture colordiffuse="red">dstv/test_small.png</texture>
					</control>
					<control type="label">
						<visible>!String.IsEmpty(ListItem.PercentPlayed) + !String.IsEqual(ListItem.PercentPlayed,0)</visible>
						<align>center</align>
						<aligny>center</aligny>
						<font>netSp</font>
						<textcolor>white</textcolor>
						<label>Assistido: $INFO[ListItem.PercentPlayed]%</label>
						<scroll>true</scroll>
						<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
					</control>
				</control>
			</control>
			<!-- Plot & Description -->
			<control type="group">
				<left>140</left>
				<top>317</top>
				<width>800</width>
				<height>250</height>
				<control type="image">
					<visible>Skin.HasSetting(dstv_debug)</visible>
				</control>
				<control type="textbox">
					<label>$VAR[ds_infoDescription]</label>
					<autoscroll delay="5000" time="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
					<font>netS</font>
					<lineheight>32</lineheight>
					<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
					<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
					<shadowoffsety>2</shadowoffsety> <!-- deslocamento vertical da sombra -->
				</control>
			</control>
		</control>
	</include>

	<include name="HomeBgFades">
		<definition>
			<control type="group">
				<top>0</top>
				<left>0</left>
				<width>100%</width>
				<height>100%</height>
				<!-- left fade-->
				<control type="image">
					<width>100</width>
					<texture colordiffuse="primary_background">dstv/fade_h.png</texture>
				</control>
				<!-- Home overlay background fade -->
				<control type="image">
					<visible>!String.IsEqual(Window(home).Property(ds_mainmenu_hidden),true) + Skin.HasSetting(fade_widgets)</visible>
					<texture colordiffuse="primary_background">colors/white.png</texture>
					<animation type="Conditional" condition="!String.IsEqual(Window().Property(ds_mainmenu_hidden),true)" reversible="true">
						<effect type="fade" start="0" end="60" time="180" tween="linear" />
					</animation>
				</control>
				<!-- Menu background fade-->
				<control type="image">
					<visible>!String.IsEqual(Window(home).Property(ds_mainmenu_hidden),true)</visible>
					<width>600</width>
					<texture colordiffuse="primary_background">dstv/menu_bg_fade.png</texture>
					<animation type="Conditional" condition="String.IsEqual(Window().Property(ds_mainmenu_hidden),true)" reversible="true">
						<effect type="fade" start="100" end="0" time="180" tween="linear" />
					</animation>
				</control>
			</control>
		</definition>
	</include>

	<include name="HomeMenuLeft">
		<control type="group" id="999000">
			<animation type="Conditional" condition="String.IsEqual(Window().Property(ds_mainmenu_hidden),true)" reversible="true">
				<!-- hide menu when browsing widgets -->
				<effect type="slide" start="0,0" end="-372,0" time="300" tween="sine" />
			</animation>
			<colordiffuse>FFFFFFFF</colordiffuse>
			<depth>DepthContentPanel</depth>
			<include>OpenClose_Left</include>
			<!-- Menu Items List -->
			<include content="UpDownArrows">
				<!-- arrow dimensions are 48x24 -->
				<param name="container_id" value="9000" />
				<param name="posx" value="95" />
				<param name="up_posy" value="220" />
				<param name="down_posy" value="1000" />
			</include>
			<control type="fixedlist" id="9000">
				<left>22</left>
				<top>380</top>
				<width>565</width>
				<height>565</height>
				<!-- 765 = 9 (items) * 85 (height per item) -->
				<movement>8</movement>
				<focusposition>0</focusposition>
				<onfocus>ClearProperty(listposition,home)</onfocus>
				<onfocus>ClearProperty(ds_mainmenu_hidden)</onfocus>
				<fadetime>1000</fadetime>
				<onright>SetFocus(50000)</onright>
				<onback>SetFocus(50000)</onback>
				<onup>SetFocus(9000,0,absolute)</onup>
				<ondown>SetFocus(800,0,absolute)</ondown>
				<scrolltime tween="cubic" easing="out">500</scrolltime>
				<itemlayout height="85">
					<!-- Icon Unselected -->
					<control type="group">
						<include>dsa_delayed_menuicon_slideout</include>
						<top>-5</top>
						<left>22</left>
						<width>60</width>
						<height>60</height>
						<!-- menu-focussed -->
						<control type="image">
							<include>dsa_quick_fade_on_change</include>
							<texture>$INFO[ListItem.icon]</texture>
							<visible>!String.IsEqual(Window().Property(ds_mainmenu_hidden),true)</visible>
						</control>
						<!-- menu-unfocussed -->
						<control type="image">
							<include>dsa_quick_fade_on_change</include>
							<texture colordiffuse="disabled">$INFO[ListItem.icon]</texture>
							<texture colordiffuse="white">dstv/red.png</texture>
							<visible>String.IsEqual(Window().Property(ds_mainmenu_hidden),true)</visible>
						</control>
					</control>
					<!-- Label Unselected -->
					<control type="group">
						<include>dsa_delayed_menulabel_fadeout</include>
						<left>115</left>
						<top>-15</top>
						<!-- menu-focussed -->
						<control type="label">
							<include>dsa_quick_fade_on_change</include>
							<aligny>center</aligny>
							<top>-15</top>
							<left>22</left>
							<font>netN</font>
							<label>$VAR[ds_menu_item_text]</label>
							<visible>!String.IsEqual(Window().Property(ds_mainmenu_hidden),true)</visible>
						</control>
						<!-- menu-unfocussed -->
						<control type="label">
							<include>dsa_quick_fade_on_change</include>
							<aligny>center</aligny>
							<top>-15</top>
							<left>22</left>
							<font>netN</font>
							<label>$VAR[ds_menu_item_text]</label>
							<textcolor>disabled</textcolor>
							<visible>String.IsEqual(Window().Property(ds_mainmenu_hidden),true)</visible>
						</control>
					</control>
				</itemlayout>
				<focusedlayout height="85">
					<!-- Icon Selected -->
					<control type="group">
						<include>dsa_delayed_menuicon_slideout</include>
						<top>-5</top>
						<left>22</left>
						<width>60</width>
						<height>60</height>
						<!-- focused -->
						<control type="image">
							<include>dsa_quick_fade_on_change</include>
							<texture colordiffuse="white">$INFO[ListItem.icon]</texture>
							<texture colordiffuse="white">dstv/red.png</texture>
						</control>
						<!-- unfocused -->
						<control type="image">
							<include>dsa_quick_fade_on_change</include>
							<texture colordiffuse="wite">dstv/red.png</texture>
							<visible>ControlGroup(800).HasFocus | !ControlGroup(999000).HasFocus</visible>
						</control>
					</control>
					<!-- Label Selected -->
					<control type="group">
						<include>dsa_delayed_menulabel_fadeout</include>
						<left>115</left>
						<top>-15</top>
						<!-- focused -->
						<control type="label">
							<include>dsa_quick_fade_on_change</include>
							<aligny>center</aligny>
							<top>-15</top>
							<left>22</left>
							<label>$VAR[ds_menu_item_text]</label>
							<textcolor>white</textcolor>
							<scroll>true</scroll>
							<font>netB</font>
						</control>
					</control>
				</focusedlayout>
				<content>
					<include>skinshortcuts-mainmenu</include>
				</content>
			</control>
			<include>HomeTopMenu</include>
		</control>
	</include>

	<include name="HomeTopMenu">
		<definition>
			<control type="group">
				<include>dsa_delayed_menulabel_fadeout</include>
				<!-- Top Menu buttons (have to be here to keep main menu open) -->
				<control type="grouplist" id="800">
					<top>90%</top>
					<width>470</width>
					<height>100</height>
					<onback>SetFocus(50000)</onback>
					<left>40</left>
					<itemgap>-36</itemgap>
					<orientation>horizontal</orientation>
					<onup>SetFocus(9000,99,absolute)</onup>
					<ondown>SetFocus(9000,0,absolute)</ondown>
					<include content="ds_IconButton">
						<param name="control_id" value="801" />
						<param name="icon" value="icons/power.png" />
						<param name="onclick" value="Quit" />
						<param name="visible" value="Skin.HasSetting(show_btn_power)" />
						<param name="onfocus" value="SetProperty(ds_setdesc,Power Menu)" />
					</include>
					<include content="ds_IconButton">
						<param name="control_id" value="803" />
						<param name="icon" value="icons/settings.png" />
						<param name="onclick" value="ActivateWindow(settings)" />
						<param name="visible" value="Skin.HasSetting(show_btn_settings)" />
						<param name="onfocus" value="SetProperty(ds_setdesc,Settings)" />
					</include>
					<include content="ds_IconButton">
						<param name="control_id" value="804" />
						<param name="icon" value="icons/now-playing/stop.png" />
						<param name="onclick" value="PlayerControl(Stop)" />
						<param name="visible" value="Player.HasMedia" />
						<param name="onfocus" value="SetProperty(ds_setdesc,Stop Video)" />
					</include>
				</control>
			</control>
		</definition>
	</include>

	<include name="HomeTopNBottomBars">
		<definition>
			<include content="TopBar">
				<param name="breadcrumbs_label" value="" />
			</include>
			<!-- BottomBar (fade) -->
			<control type="image">
				<left>0</left>
				<bottom>0</bottom>
				<width>100%</width>
				<height>115</height>
				<texture colordiffuse="FFFF0000" flipy="true">frame/InfoBar.png</texture>
			</control>
		</definition>
	</include>

	<include name="HomeMenuLogos">
		<definition>
			<control type="group">
				<depth>DepthBars</depth>
				<animation effect="slide" end="0,-90" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				<top>30</top>
				<left>90</left>
				<!-- User logo -->
				<control type="group">
					<!-- Avatar (Ícone) -->
					<control type="image">
						<!-- Removed the <visible> condition to always show the profile avatar -->
						<top>10</top> <!-- Define a posição no topo da tela -->
						<left>-15</left> <!-- Define a posição horizontal -->
						<width>75</width>
						<height>75</height>
						<animation type="Conditional" condition="String.IsEqual(Window().Property(ds_mainmenu_hidden),true)" reversible="true">
							<effect type="fade" start="100" end="25" time="250" />
						</animation>
						<texture colordiffuse="translucid">dstv/profile.png</texture>
						<aspectratio>keep</aspectratio>
					</control>
					<!-- Nome do usuário -->
					<control type="label">
						<top>80</top> <!-- Alinha verticalmente com o ícone -->
						<left>-15</left> <!-- Posiciona o texto ao lado do ícone (56px de largura + 20px de espaçamento) -->
						<width>200</width> <!-- Define a largura do rótulo -->
						<height>56</height> <!-- Altura alinhada ao ícone -->
						<font>netSp</font> <!-- Escolha uma fonte adequada -->
						<label>$INFO[System.ProfileName]</label> <!-- Exibe o nome do usuário -->
						<textcolor>white</textcolor> <!-- Define a cor do texto -->
						<aligny>center</aligny> <!-- Centraliza verticalmente o texto com o ícone -->
						<animation type="Conditional" condition="String.IsEqual(Window().Property(ds_mainmenu_hidden),true)" reversible="true">
							<effect type="fade" start="100" end="25" time="250" />
						</animation>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<!-- Widgets -->
	<include name="ds_widgetPanelList">
		<!-- internal variables -->
		<param name="left_offset">100</param>
		<param name="top_offset">40</param>
		<param name="display_titles">false</param>
		<!-- external variables -->
		<param name="list_id"/>
		<param name="widget_header"/>
		<param name="content_path"/>
		<param name="sortby"/>
		<param name="sortorder"/>
		<param name="limit"/>
		<param name="widget_target"/>
		<param name="width"/>
		<param name="height"/>
		<param name="widget_width"/>
		<param name="widget_height"/>
		<param name="aspect_ratio"/>
		<param name="display_type"/>
		<param name="display_type_isposters"/>
		<definition>
			<!-- Widget Header -->
			<control type="group" id="$PARAM[list_id]1">
				<visible>Skin.HasSetting(show_emptywidgets) | Container($PARAM[list_id]).IsUpdating | Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<animation effect="fade" start="100" end="30" time="250" tween="sine" reversible="true" condition="!Control.HasFocus(9000) + !Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<left>100</left>
				<top>0</top>
				<width>100%</width>
				<height>45</height>
				<!-- Widget Title background shadow -->
				<control type="group">
					<top>-1</top>
					<left>-1</left>
					<visible>!Skin.HasSetting(netflix_bg)</visible>
					<control type="label">
						<font>widget_label</font>
						<textcolor>primary_background</textcolor>
						<visible>String.IsEmpty(Skin.String(dstv_menu_widgets_text_case))</visible>
						<label>$PARAM[widget_header]</label>
					</control>
					<control type="label">
						<font>widget_label</font>
						<textcolor>primary_background</textcolor>
						<visible>String.IsEqual(Skin.String(dstv_menu_widgets_text_case),allcaps)</visible>
						<label>[UPPERCASE]$PARAM[widget_header][/UPPERCASE]</label>
					</control>
					<control type="label">
						<font>widget_label</font>
						<textcolor>primary_background</textcolor>
						<visible>String.IsEqual(Skin.String(dstv_menu_widgets_text_case),titlecase)</visible>
						<label>[CAPITALIZE][LOWERCASE]$PARAM[widget_header][/LOWERCASE][/CAPITALIZE]</label>
					</control>
				</control>
				<!-- Widget Title foreground text -->
				<control type="label">
					<font>widget_label</font>
					<shadowcolor>primary_background</shadowcolor>
					<visible>String.IsEmpty(Skin.String(dstv_menu_widgets_text_case))</visible>
					<label>$PARAM[widget_header]</label>
				</control>
				<control type="label">
					<font>widget_label</font>
					<shadowcolor>primary_background</shadowcolor>
					<visible>String.IsEqual(Skin.String(dstv_menu_widgets_text_case),allcaps)</visible>
					<label>[UPPERCASE]$PARAM[widget_header][/UPPERCASE]</label>
				</control>
				<control type="label">
					<font>widget_label</font>
					<shadowcolor>primary_background</shadowcolor>
					<visible>String.IsEqual(Skin.String(dstv_menu_widgets_text_case),titlecase)</visible>
					<label>[CAPITALIZE][LOWERCASE]$PARAM[widget_header][/LOWERCASE][/CAPITALIZE]</label>
				</control>
			</control>
			<!-- Loading pulser -->
			<control type="label" id="$PARAM[list_id]2">
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,1)</visible>
				<animation effect="fade" start="100" end="0" time="1000" tween="sine" pulse="true" condition="true">Conditional</animation>
				<left>50%</left>
				<top>0</top>
				<width>100%</width>
				<height>50</height>
				<font>widget_label</font>
				<shadowcolor>text_shadow</shadowcolor>
				<label>Loading..</label>
			</control>
			<!-- Widget Panels List -->
			<control type="fixedlist" id="$PARAM[list_id]">
				<visible>Container($PARAM[list_id]).IsUpdating | Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<animation effect="fade" start="100" end="10" time="250" tween="sine" reversible="true" condition="!Control.HasFocus(9000) + !Control.HasFocus($PARAM[list_id])">Conditional</animation>
				<animation effect="fade" start="100" end="10" time="250" tween="sine" reversible="true" condition="Control.HasFocus(9000) + !Skin.HasSetting(netflix_bg)">Conditional</animation>
				<left>0</left>
				<top>0</top>
				<right>0</right>
				<height>$PARAM[widget_height]</height>
				<onback>9000</onback>
				<onleft>9000</onleft>
				<onright>SetFocus($PARAM[list_id],0,absolute)</onright>
				<onfocus>SetProperty(ds_mainmenu_hidden,true,home)</onfocus>
				<!-- set widgetpath property for ContextMenu "Browse Widget Folder" option -->
				<onfocus>SetProperty(ds_prop_widgetpath, $PARAM[content_path], home)</onfocus>
				<!-- Widget Controls -->
				<scrolltime tween="linear" easing="in">250</scrolltime>
				<orientation>horizontal</orientation>
				<preloaditems>2</preloaditems>
				<focusposition>0</focusposition>
				<!-- Widget panels layout -->
				<itemlayout width="$PARAM[widget_width]">
					<control type="group">
						<left>$PARAM[left_offset]</left>
						<top>$PARAM[top_offset]</top>
						<width>$PARAM[width]</width>
						<itemgap>-400</itemgap>
						<height>$PARAM[height]</height>
						<!-- Invisible background loading of Fanart so it displays faster in the Title area when focussed -->
						<control type="image">
							<visible>Skin.HasSetting(dstv_setting_preload_fanart)</visible>
							<texture colordiffuse="00FFFFFF" background="true">$VAR[ds_infoFanart]</texture>
							<aspectratio>keep</aspectratio>
						</control>
						<!-- Invisible background loading of ClearLogo so it displays faster in the Title area when focussed -->
						<control type="image">
							<visible>Skin.HasSetting(dstv_setting_use_clearlogo_titles)</visible>
							<texture colordiffuse="00FFFFFF" background="true">$INFO[ListItem.Art(clearlogo)]</texture>
							<aspectratio align="left" aligny="top">keep</aspectratio>
						</control>
						<!-- Poster -->
						<control type="image">
							<visible>$PARAM[display_type_isposters]</visible>
							<texture fallback="dstv/kodi_poster.png" background="true">$VAR[ds_WidgetPanelPoster]</texture>
							<aspectratio>$PARAM[aspect_ratio]</aspectratio>
						</control>
						<!-- Label -->
						<control type="group">
							<visible>ListItem.Property(weather) | Skin.HasSetting(show_widget_titles) | $PARAM[display_titles]</visible>
							<top>$PARAM[height]</top>
							<control type="label">
								<top>-34</top>
								<align>center</align>
								<textoffsetx>7</textoffsetx>
								<font>font12</font>
								<textcolor>button_focus</textcolor>
								<label>$INFO[ListItem.Label]</label>
							</control>
						</control>
						<!-- Watched Status - Small -->
						<control type="image">
							<visible>Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(dstv_setting_smaller_watched)</visible>
							<width>38</width>
							<height>38</height>
							<texture>dstv/watched.png</texture>
						</control>
						<control type="label">
							<left>70%</left>
							<width>41</width>
							<height>41</height>
							<align>right</align>
							<aligny>center</aligny>
							<font>netSssp</font>
							<texture colordiffuse="AAFFFFFF">colors/black.png</texture>
							<textcolor>white</textcolor>
							<focusedcolor>white</focusedcolor>
							<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
							<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
							<shadowoffsety>2</shadowoffsety> <!-- deslocamento vertical da sombra -->
							<label>$VAR[ds_infoRat]</label>
							<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
						</control>
					</control>
				</itemlayout>
				<!-- Focused Widget Panels Layout -->
				<focusedlayout width="$PARAM[widget_width]">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<animation type="Focus">
						<effect type="zoom" start="100" end="80" time="150" tween="sine" easing="in" center="200,150" />
						<effect type="zoom" start="100" end="125" time="150" tween="sine" easing="out" center="200,150" delay="175" />
						</animation>
						<left>$PARAM[left_offset]</left>
						<top>$PARAM[top_offset]</top>
						<width>$PARAM[width]</width>
						<height>$PARAM[height]</height>

						<!-- Hack for running commands each time a ListItem is focussed. -->
						<control type="button">
						<!-- set persistent Info Area data -->
						<onfocus>SetProperty(ds_info_title, "$INFO[ListItem.Label]", home)</onfocus>
						<onfocus>SetProperty(ds_info_dt_premier, "$INFO[ListItem.Premiered]", home)</onfocus>
						<onfocus>SetProperty(ds_info_dt_date, "$INFO[ListItem.Date]", home)</onfocus>
						<onfocus>SetProperty(ds_info_dt_year, "$INFO[ListItem.Year]", home)</onfocus>
						<onfocus>SetProperty(ds_info_duration, "$INFO[ListItem.Duration(hh:mm:ss)]", home)</onfocus>
						<onfocus>SetProperty(ds_info_rating, "$INFO[ListItem.Rating]", home)</onfocus>
						<onfocus>SetProperty(ds_info_agerating, "$INFO[ListItem.Mpaa]", home)</onfocus>
						<onfocus>SetProperty(ds_info_studio, "$INFO[ListItem.Studio]", home)</onfocus>
						<onfocus>SetProperty(ds_info_genre, "$INFO[ListItem.Genre]", home)</onfocus>
						<onfocus>SetProperty(ds_info_tagline, "$INFO[ListItem.Tagline]", home)</onfocus>
						<onfocus>SetProperty(ds_info_desc, "$INFO[ListItem.Plot]", home)</onfocus>
						<onfocus>SetProperty(ds_info_weather, "$INFO[ListItem.Property(weather)]", home)</onfocus>
						<onfocus>SetProperty(ds_info_fanart_art, $INFO[ListItem.Art(fanart)], home)</onfocus>
						<onfocus>SetProperty(ds_info_fanart_prop, $INFO[ListItem.Property(fanart)], home)</onfocus>
						<onfocus>SetProperty(ds_info_clearlogo, $INFO[ListItem.Art(clearlogo)], home)</onfocus>
						<onfocus>SetProperty(ds_info_imdb_id, $INFO[ListItem.IMDbNumber], home)</onfocus>
						<onfocus>SetProperty(ds_info_dbtype, $INFO[ListItem.DBType], home)</onfocus>
						</control>

						<!-- Selection Box for Squares & Posters -->
						<control type="image">
							<visible>Control.HasFocus($PARAM[list_id])</visible>
							<left>-3%</left>
							<top>-3%</top>
							<width>106%</width>
							<height>106%</height>
							<texture colordiffuse="primary_background">colors/white.png</texture>
							<bordertexture colordiffuse="white" infill="false">colors/white.png</bordertexture>
							<bordersize>6</bordersize>
							<aspectratio>scale</aspectratio>
						</control>

						<!-- Poster -->
						<control type="image">
							<visible>$PARAM[display_type_isposters]</visible>
							<texture fallback="dstv/kodi_poster.png" background="true">$VAR[ds_WidgetPanelPoster]</texture>
							<aspectratio>$PARAM[aspect_ratio]</aspectratio>
						</control>

						<!-- Watched Status - Small -->
						<control type="image">
							<visible>Integer.IsGreater(ListItem.Playcount,0) + Skin.HasSetting(dstv_setting_smaller_watched)</visible>
							<width>38</width>
							<height>38</height>
							<texture>dstv/watched.png</texture>
						</control>

						<!-- Rating (duplicado para o focusedlayout) -->
						<control type="label">
							<left>70%</left>
							<width>41</width>
							<height>41</height>
							<align>right</align>
							<aligny>center</aligny>
							<font>netSssp</font>
							<texture colordiffuse="AAFFFFFF">colors/black.png</texture>
							<textcolor>white</textcolor>
							<focusedcolor>white</focusedcolor>
							<shadowcolor>FF000000</shadowcolor> <!-- sombra preta opaca -->
							<shadowoffsetx>2</shadowoffsetx> <!-- deslocamento horizontal da sombra -->
							<shadowoffsety>2</shadowoffsety> <!-- deslocamento vertical da sombra -->
							<label>$VAR[ds_infoRat]</label>
							<autoscroll delay="1000" time="1500" repeat="1">true</autoscroll>
						</control>

						<!-- Label Background Fade -->
						<control type="image">
							<visible>ListItem.Property(weather) | Skin.HasSetting(show_widget_titles) | $PARAM[display_titles]</visible>
							<bottom>0</bottom>
							<height>50</height>
							<texture>dstv/widgets/title_bar.png</texture>
							<aspectratio>stretch</aspectratio>
						</control>

						<!-- Label -->
						<control type="group">
							<visible>ListItem.Property(weather) | Skin.HasSetting(show_widget_titles) | $PARAM[display_titles]</visible>
							<top>$PARAM[height]</top>
							<control type="label">
								<top>-34</top>
								<align>center</align>
								<textoffsetx>7</textoffsetx>
								<font>font12</font>
								<textcolor>selected</textcolor>
								<label>$INFO[ListItem.Label]</label>
								<scroll>true</scroll>
								<autoscroll time="2000" delay="500" repeat="0">true</autoscroll>
							</control>
						</control>

					</control>
				</focusedlayout>

				<content>
					<item>
						<visible>Container($PARAM[list_id]).IsUpdating + Integer.IsLessOrEqual(Container($PARAM[list_id]).NumItems,2)</visible>
						<icon>special://skin/gif/loading.gif</icon>
						<property name="poster">special://skin/gif/loading.gif</property>
					</item>
					<item>
						<visible>Skin.HasSetting(show_emptywidgets) + !Skin.HasSetting(show_browsewidget) + !Container($PARAM[list_id]).IsUpdating + !String.IsEmpty(Control.GetLabel($PARAM[list_id]1)) + Integer.IsLessOrEqual(Container($PARAM[list_id]).NumItems,1)</visible>
						<label>No Content</label>
						<icon>dstv/widgets/empty.png</icon>
						<property name="poster">dstv/widgets/empty.png</property>
					</item>
				</content>
				<content browse="auto" sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
				<content>
					<item>
						<visible>Skin.HasSetting(show_browsewidget) + Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) + !Container($PARAM[list_id]).IsUpdating</visible>
						<label>Browse Widget</label>
						<onclick>ActivateWindow(Videos,"$PARAM[content_path]",return)</onclick>
						<icon>dstv/kodi.png</icon>
						<property name="poster">dstv/kodi_poster.png</property>
					</item>
				</content>
			</control>
		</definition>
	</include>
	<include name="ds_extra_toplabel">
		<definition>
			<control type="group">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<visible>!String.IsEmpty(ListItem.Property(toplabel))</visible>
				<control type="image">
					<height>50</height>
					<texture flipy="true">dstv/widgets/title_bar.png</texture>
				</control>
				<control type="label">
					<align>center</align>
					<textoffsetx>7</textoffsetx>
					<font>font12</font>
					<label>$INFO[ListItem.Property(toplabel)]</label>
				</control>
			</control>
		</definition>
	</include>
</includes>
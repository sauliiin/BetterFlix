<?xml version="1.0" encoding="UTF-8"?>
<!-- DSTV Changes! -->
<includes>
	<include name="View_53_Shift">
		<control type="group">
			<description>Poster Viewtype</description>
			<centertop>50%</centertop>
			<left>0</left>
			<height>880</height>
			<control type="group">
				<visible>Control.IsVisible(53)</visible>
				<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
				<animation effect="fade" time="200">VisibleChange</animation>
				<control type="image">
					<left>0</left>
					<top>760</top>
					<width>100%</width>
					<height>110</height>
					<texture colordiffuse="E6FFFFFF">dialogs/dialog-bg-nobo.png</texture>
				</control>
				<control type="image">
					<left>0</left>
					<top>35</top>
					<width>100%</width>
					<height>190</height>
					<texture colordiffuse="E6FFFFFF">dialogs/dialog-bg-nobo.png</texture>
				</control>
			</control>
			<control type="group">
				<visible>Control.IsVisible(53)</visible>
				<include>Visible_Right</include>
				<include>OpenClose_Right</include>
				<top>160</top>
				<control type="image">
					<left>600</left>
					<top>600</top>
					<width>340</width>
					<height>110</height>
					<visible>Control.HasFocus(53)</visible>
					<animation effect="fade" time="200">VisibleChange</animation>
					<!-- DSTV: colordiffuse selected. -->
					<texture colordiffuse="selected">colors/grey.png</texture>
					<animation effect="slide" start="0,0" end="-364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,1) | Integer.IsEqual(Container.Position,0)">Conditional</animation>
					<animation effect="slide" start="0,0" end="-364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,0)">Conditional</animation>
					<animation effect="slide" start="0,0" end="364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,3) | Integer.IsEqual(Container.Position,4)">Conditional</animation>
					<animation effect="slide" start="0,0" end="364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,4)">Conditional</animation>
				</control>
				<!-- DSTV: control group. -->
				<control type="group">
					<left>600</left>
					<width>340</width>
					<visible>Control.HasFocus(53)</visible>
					<animation effect="fade" time="200">VisibleChange</animation>
					<animation effect="slide" start="0,0" end="-364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,1) | Integer.IsEqual(Container.Position,0)">Conditional</animation>
					<animation effect="slide" start="0,0" end="-364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,0)">Conditional</animation>
					<animation effect="slide" start="0,0" end="364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,3) | Integer.IsEqual(Container.Position,4)">Conditional</animation>
					<animation effect="slide" start="0,0" end="364,0" time="300" tween="sine" easing="inout" condition="Integer.IsEqual(Container.Position,4)">Conditional</animation>
					<control type="image">
						<depth>DepthContentPopout</depth>
						<top>85</top>
						<height>490</height>
						<texture colordiffuse="selected">colors/grey.png</texture>
					</control>
					<control type="image">
						<top>600</top>
						<height>110</height>
						<texture colordiffuse="border_alpha">colors/black.png</texture>
					</control>
				</control>
				<control type="fixedlist" id="53">
					<left>-150</left>
					<top>0</top>
					<width>111%</width>
					<height>695</height>
					<focusposition>1</focusposition>
					<movement>0</movement>
					<pagecontrol>5199</pagecontrol>
					<scrolltime tween="cubic" easing="out">500</scrolltime>
					<orientation>horizontal</orientation>
					<!-- DSTV: add locked-view checks: -->
					<visible>[Container.Content(movies) + [String.IsEqual(Skin.String(Skin.ForcedView.movies),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.movies))]] | [Container.Content(sets) + [String.IsEqual(Skin.String(Skin.ForcedView.sets),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.sets))]] | [Container.Content(tvshows) + [String.IsEqual(Skin.String(Skin.ForcedView.tvshows),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.tvshows))]] | [Container.Content(seasons) + [String.IsEqual(Skin.String(Skin.ForcedView.seasons),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.seasons))]] | [Container.Content(musicvideos) + [String.IsEqual(Skin.String(Skin.ForcedView.musicvideos),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.musicvideos))]] | [Container.Content(artists) + [String.IsEqual(Skin.String(Skin.ForcedView.artists),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.artists))]] | [Container.Content(albums) + [String.IsEqual(Skin.String(Skin.ForcedView.albums),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.albums))]] | [Container.Content(mixed) + [String.IsEqual(Skin.String(Skin.ForcedView.mixed),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.mixed))]] | [Container.Content(images) + [String.IsEqual(Skin.String(Skin.ForcedView.images),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.images))]] | [Container.Content(videos) + [String.IsEqual(Skin.String(Skin.ForcedView.videos),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.videos))]] | [Container.Content(games) + [String.IsEqual(Skin.String(Skin.ForcedView.games),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.games))]] | [Container.Content(favourites) + [String.IsEqual(Skin.String(Skin.ForcedView.favourites),$LOCALIZE[31100]) | String.IsEmpty(Skin.String(Skin.ForcedView.favourites))]]</visible>
					<onleft>53</onleft>
					<onup>9000</onup>
					<ondown>5199</ondown>
					<onright>53</onright>
					<preloaditems>1</preloaditems>
					<viewtype label="31100">icon</viewtype>
					<itemlayout width="370">
						<include content="ShiftImageBox" />
					</itemlayout>
					<focusedlayout width="370">
						<include content="ShiftImageBox" />
					</focusedlayout>
				</control>
			</control>
			<control type="group">
				<visible>Control.IsVisible(53)</visible>
				<include>Visible_Right</include>
				<include>OpenClose_Right</include>
				<control type="group">
					<width>50%</width>
					<include content="ShiftTextbox">
						<param name="textbox_id" value="53200" />
						<param name="textbox_content" value="$VAR[ShiftLeftTextBoxVar]" />
					</include>
				</control>
				<control type="group">
					<left>50%</left>
					<width>50%</width>
					<include content="ShiftTextbox">
						<param name="textbox_id" value="53300" />
						<param name="textbox_content" value="$VAR[ShiftRightTextBoxVar]" />
					</include>
				</control>
				<control type="panel">
					<left>20</left>
					<top>48</top>
					<width>940</width>
					<height>180</height>
					<orientation>horizontal</orientation>
					<visible>ListItem.IsCollection</visible>
					<animation effect="fade" time="200">VisibleChange</animation>
					<focusedlayout height="40" width="470">
						<control type="label">
							<textoffsetx>10</textoffsetx>
							<height>40</height>
							<width>460</width>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Year,[COLOR button_focus],[/COLOR]  -  ]$INFO[ListItem.Title]</label>
							<shadowcolor>text_shadow</shadowcolor>
						</control>
					</focusedlayout>
					<itemlayout height="40" width="470">
						<control type="label">
							<textoffsetx>10</textoffsetx>
							<height>40</height>
							<width>460</width>
							<aligny>center</aligny>
							<label>$INFO[ListItem.Year,[COLOR button_focus],[/COLOR]  -  ]$INFO[ListItem.Title]</label>
							<shadowcolor>text_shadow</shadowcolor>
						</control>
					</itemlayout>
					<content sortby="year" sortorder="ascending">$VAR[InfoListPathVar]</content>
				</control>
			</control>
		</control>
	</include>
	<include name="ShiftImageBox">
		<control type="image">
			<left>18</left>
			<top>90</top>
			<width>334</width>
			<height>480</height>
			<aspectratio aligny="center">stretch</aspectratio>
			<texture>dialogs/dialog-bg-nobo.png</texture>
			<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
			<bordersize>20</bordersize>
			<visible>String.IsEmpty(ListItem.Art(thumb)) + !Container.Content(albums) | String.IsEmpty(ListItem.Art(poster)) + [Container.Content(movies) | Container.Content(tvshows)]</visible>
		</control>
		<control type="image">
			<depth>DepthContentPopout</depth>
			<left>18</left>
			<top>90</top>
			<width>334</width>
			<height>480</height>
			<aspectratio aligny="center">keep</aspectratio>
			<texture fallback="DefaultVideo.png" background="true">$VAR[ShiftThumbVar]</texture>
			<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
			<bordersize>20</bordersize>
			<visible>String.IsEmpty(ListItem.Art(poster))</visible>
		</control>
		<control type="image">
			<depth>DepthContentPopout</depth>
			<left>18</left>
			<top>90</top>
			<width>334</width>
			<height>480</height>
			<aspectratio aligny="center">scale</aspectratio>
			<texture fallback="DefaultVideo.png" background="true">$VAR[ShiftThumbVar]</texture>
			<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
			<bordersize>20</bordersize>
			<visible>!String.IsEmpty(ListItem.Art(poster))</visible>
		</control>
		<control type="textbox">
			<left>20</left>
			<top>603</top>
			<width>330</width>
			<height>105</height>
			<align>center</align>
			<aligny>center</aligny>
			<label>$INFO[ListItem.Label]</label>
		</control>
		<include>IconStatusOverlay</include>
		<control type="group">
			<left>158</left>
			<top>92</top>
			<include condition="Skin.HasSetting(circle_rating) | Skin.HasSetting(circle_userrating)">RatingCircle</include>
		</control>
		<control type="progress">
			<left>32</left>
			<top>530</top>
			<width>298</width>
			<height>1</height>
			<texturebg></texturebg>
			<midtexture colordiffuse="button_focus" border="3">progress/texturebg_alt_white.png</midtexture>
			<info>ListItem.PercentPlayed</info>
			<visible>!Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
		</control>
	</include>
	<include name="ShiftTextbox">
		<control type="group">
			<animation effect="fade" time="200" start="0" end="100" condition="!String.IsEmpty(Control.GetLabel($PARAM[textbox_id]))">Conditional</animation>
			<animation effect="fade" time="200" start="100" end="0" condition="String.IsEmpty(Control.GetLabel($PARAM[textbox_id]))">Conditional</animation>
			<control type="textbox" id="$PARAM[textbox_id]">
				<left>30</left>
				<top>45</top>
				<right>30</right>
				<height>163</height>
				<label>$PARAM[textbox_content]</label>
				<shadowcolor>text_shadow</shadowcolor>
			</control>
		</control>
	</include>
	<include name="IconStatusOverlay">
		<control type="group">
			<visible>String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,set) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.IsCollection) | String.IsEqual(ListItem.HasVideoVersions) | String.IsEqual(ListItem.IsResumable) | Integer.IsGreater(ListItem.Playcount,0)</visible>
			<control type="image">
				<left>38</left>
				<top>500</top>
				<width>294</width>
				<height>50</height>
				<texture colordiffuse="CCFFFFFF">overlays/overlayfade.png</texture>
				<visible>!String.IsEmpty(ListItem.Art(poster))</visible>
			</control>
			<control type="label">
				<left>75</left>
				<top>522</top>
				<width>222</width>
				<height>24</height>
				<label>$VAR[WatchedStatusVar]</label>
				<font>font20_title</font>
				<shadowcolor>text_shadow</shadowcolor>
				<align>right</align>
				<aligny>center</aligny>
				<visible>String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,set) | String.IsEqual(ListItem.DBType,season)</visible>
			</control>
			<control type="image">
				<left>302</left>
				<top>522</top>
				<width>24</width>
				<height>24</height>
				<texture>lists/played-total.png</texture>
				<align>right</align>
				<aligny>center</aligny>
				<visible>String.IsEqual(ListItem.DBtype,tvshow) | String.IsEqual(ListItem.DBtype,set) | String.IsEqual(ListItem.DBType,season)</visible>
			</control>
			<control type="image">
				<left>45</left>
				<!-- DSTV: top 522 > 110. -->
				<top>110</top>
				<!-- DSTV: width/height 24 > 38. -->
				<width>38</width>
				<height>38</height>
				<align>left</align>
				<aligny>center</aligny>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<!-- DSTV: visible tag. -->
				<visible>Skin.HasSetting(dstv_setting_smaller_watched)</visible>
			</control>
			<!-- DSTV: control image. -->
			<control type="image">
				<left>45</left>
				<top>110</top>
				<width>75</width>
				<height>75</height>
				<align>left</align>
				<aligny>center</aligny>
				<texture>$VAR[WallWatchedIconVar]</texture>
				<visible>!Skin.HasSetting(dstv_setting_smaller_watched)</visible>
			</control>
		</control>
	</include>
</includes>
